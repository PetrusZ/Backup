## 下载设置 ##

# 断点续传
continue=true
# 最大同时下载任务数, 运行时可修改, 默认:5
max-concurrent-downloads=5
# 单个文件最大线程数, 添加时可指定, 默认:5
split=10
# 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M
# 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载
min-split-size=10M
# 同一服务器连接数, 添加时可指定, 默认:1
max-connection-per-server=16
# 断开速度过慢的连接
lowest-speed-limit=0
# 整体下载速度限制, 运行时可修改, 默认:0
max-overall-download-limit=0
# 单个任务下载速度限制, 默认:0
max-download-limit=0
# 整体上传速度限制, 运行时可修改, 默认:0
#max-overall-upload-limit=1M
# 单个任务上传速度限制, 默认:0
max-upload-limit=0
# 禁用IPv6, 默认:false
#disable-ipv6=true
# 当服务器返回503错误时, aria2会尝试重连
# 尝试重连次数, 0代表无限, 默认:5
max-tries=5
# 重连冷却, 默认:0
retry-wait=10

## 进度保存相关 ##

# 从会话文件中读取下载任务
# 开启该参数后aria2将只接受session中的任务, 这意味着aria2一旦使用conf后将不再接受来自终端的任务, 所以该条只需要在启动rpc时加上就可以了
input-file=/home/petrus/.aria2/aria2.session
# 在Aria2退出时保存`错误/未完成`的下载任务到会话文件
save-session=/home/petrus/.aria2/aria2.session
# 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0
save-session-interval=60
# 强制保存会话, 即使任务已经完成, 默认:false
# 较新的版本开启后会在任务完成后依然保留.aria2文件
force-save=false

## RPC相关设置 ##

# 启用RPC, 默认:false
enable-rpc=true
# 允许所有来源, 默认:false
rpc-allow-origin-all=true
# 允许非外部访问, 默认:false
rpc-listen-all=true
# 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同
event-poll=epoll
# RPC监听端口, 端口被占用时可以修改, 默认:6800
rpc-listen-port=6800
# 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项
rpc-secret=06ffa48448af4996b3da7c1df48f
# 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项
#rpc-user=<USER>
# 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项
#rpc-passwd=<PASSWD>

## BT/PT下载相关 ##

# 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true
follow-torrent=true
# BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999
listen-port=23881-23899
# 单个种子最大连接数, 默认:55
bt-max-peers=55
# 打开DHT功能, PT需要禁用, 默认:true
enable-dht=true
# 打开IPv6 DHT功能, PT需要禁用, 默认:true
#enable-dht6=false
# DHT网络监听端口, 默认:6881-6999
dht-listen-port=23881-23899
# 本地节点查找, PT需要禁用, 默认:false
bt-enable-lpd=true
# 种子交换, PT需要禁用, 默认:true
enable-peer-exchange=true
# 每个种子限速, 对少种的PT很有用, 默认:50K
#bt-request-peer-speed-limit=50K
# 客户端伪装, PT需要
peer-id-prefix=-TR2770-
user-agent=Transmission/2.77
#peer-id-prefix=-UT2210-
#user-agent=uTorrent/2210(25130)
# 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0
seed-ratio=1.0
# BT校验相关, 默认:true
bt-hash-check-seed=true
# 继续之前的BT任务时, 无需再次校验, 默认:false
bt-seed-unverified=false
# 保存磁力链接元数据为种子文件(.torrent文件), 默认:false
bt-save-metadata=false
# 强制加密, 防迅雷必备
bt-require-crypto=true
#bt-tracker
bt-tracker=udp://62.138.0.158:6969/announce,udp://87.233.192.220:6969/announce,udp://208.83.20.20:6969/announce,udp://185.225.17.100:1337/announce,udp://51.15.4.13:1337/announce,udp://151.80.120.115:2710/announce,udp://191.96.249.23:6969/announce,udp://51.15.76.199:6969/announce,udp://5.79.83.194:6969/announce,udp://5.79.83.193:6969/announce,udp://5.206.28.90:6969/announce,udp://95.211.168.204:2710/announce,udp://176.31.106.35:80/announce,udp://51.15.103.67:1337/announce,udp://89.234.156.205:451/announce,udp://95.216.176.107:6969/announce,udp://51.38.184.185:6969/announce,udp://159.100.245.75:6969/announce,udp://91.242.163.186:6969/announce,udp://35.203.28.129:6969/announce,udp://37.235.174.46:2710/announce,udp://188.246.227.212:80/announce,udp://128.1.203.23:8080/announce,udp://185.83.215.123:6969/announce,udp://5.1.80.129:6969/announce,udp://8.9.31.140:2000/announce,udp://173.212.234.232:2710/announce,http://51.38.230.101:80/announce,http://213.184.225.53:80/announce,http://51.68.122.172:80/announce,udp://212.47.227.58:6969/announce,udp://45.77.77.76:2710/announce,udp://37.187.123.8:2710/announce,udp://104.244.74.93:6969/announce,https://54.175.110.28:443/announce,http://64.78.163.242:2710/announce,http://82.209.230.66:80/announce,http://62.210.177.88:1096/announce,http://115.217.77.181:36006/announce,http://158.69.62.21:443/announce,wss://212.71.251.70:443/announce,wss://8.9.31.140:443/announce,wss://144.6.227.30:443/announce,wss://45.32.219.126:443/announce,ws://195.20.52.26:2710/announce,udp://167.114.97.225:2710/announce,udp://35.187.36.248:1337/announce,udp://54.36.163.162:1337/announce,udp://210.244.71.25:6969/announce,udp://173.254.219.72:6969/announce,udp://91.217.91.21:3218/announce,udp://75.127.14.224:2710/announce,udp://111.6.78.96:6969/announce,udp://67.227.226.240:1337/announce,udp://94.23.217.90:1337/announce,udp://185.53.179.6:6969/announce,udp://87.110.238.140:6969/announce,udp://52.7.6.73:6969/announce,udp://210.203.118.5:6969/announce,udp://185.53.178.8:6969/announce,udp://85.204.49.104:2710/announce,udp://78.46.250.23:61655/announce,udp://163.172.27.222:2710/announce,udp://184.168.221.69:6969/announce,udp://82.117.175.6:2710/announce,udp://83.167.65.174:2710/announce,udp://195.154.237.88:2710/announce,udp://91.218.230.81:6969/announce,udp://138.68.225.164:6969/announce,udp://82.118.242.198:1337/announce,udp://202.172.28.200:6969/announce,udp://172.93.194.61:6969/announce,udp://51.15.40.114:80/announce,udp://46.166.185.89:3418/announce,udp://69.94.136.151:6969/announce,https://104.28.17.210:443/announce,http://128.1.203.23:8080/announce,http://51.15.76.199:6969/announce,http://62.210.202.61:80/announce,http://185.217.0.76:80/announce,http://77.91.229.218:6881/announce,http://185.225.17.100:1337/announce,http://62.210.202.61:80/announce,http://172.104.249.119:1337/announce,http://198.251.81.243:8080/announce,http://95.161.0.203:80/announce,http://51.15.60.191:1337/announce,http://5.79.83.194:6969/announce,http://188.68.224.156:6969/announce
#修改 IPv4 DHT 路由表文件路径.
dht-file-path=/home/petrus/.aria2/dht.dat


## 磁盘相关 ##

#文件保存路径, 默认为当前启动位置
dir=/home/petrus/Downloads
# dir=/run/media/petrus/1701-2D28/XBOX360
#另一种Linux文件缓存方式, 使用前确保您使用的内核支持此选项, 需要1.15及以上版本(?)
enable-mmap=true
# 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc
# 预分配所需时间: 快none < trunc < falloc < prealloc慢
# falloc仅仅比trunc慢0.06s
# 磁盘碎片: 无falloc = prealloc < trunc = none有
# 推荐优先级: 高falloc --> prealloc --> trunc -->none低
# EXT4, btrfs, xfs, NTFS等新型文件系统建议使用falloc, falloc(fallocate)在这些文件系统上可以瞬间创建完整的空文件
# trunc(ftruncate) 同样是是瞬间创建文件, 但是与falloc的区别是创建出的空文件不占用实际磁盘空间
# prealloc 传统的创建完整的空文件, aria2会一直等待直到分配结束, 也就是说如果是在HHD上下载10G文件，那么你的aria2将会一直等待你的硬盘持续满载工作直到10G文件创建完成后才会开始下载
# none将不会预分配, 磁盘碎片程度受下面的disk-cache影响, trunc too
# 请勿在传统文件系统如:EXT3, FAT32上使用falloc, 它的实际效果将与prealloc相同
# MacOS建议使用prealloc, 因为它不支持falloc, 也不支持trunc, but可以尝试用brew安装truncate以支持trunc(ftruncate)
# 事实上我有些不能理解trunc在aria2中的角色, 它与none几乎没有区别, 也就是说:太鸡肋了
file-allocation=falloc
# 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M
disk-cache=64M

## Misc ##

#验证用，需要1.16.1之后的release版本
referer=*
#不进行证书校验
check-certificate=false
#启用后台进程
#daemon=false
#日志文件
#日志文件的路径. 如果设置为 "-", 日志则写入到 stdout. 如果设置为空字符串(""), 日志将不会记录到磁盘上.
log=/home/petrus/.aria2/aria2.log
#日志级别
log-level=notice
#部分事件hook
#BT下载完成(如有做种将包含做种，如需调用请务必确定设定完成做种条件)
#on-bt-download-complete=
