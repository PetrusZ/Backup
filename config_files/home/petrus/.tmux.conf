#-- base --#

run-shell "powerline-daemon -q"

# terminal-setting
set-option -s set-clipboard off
# set -g default-terminal "screen-256color"
set -g default-terminal "xterm-256color"
# set-option -g  default-terminal 'tmux-256color'
set-option -ga terminal-overrides ',xterm-256color:Tc'
set -g display-time 3000
set -g history-limit 10000
set -g base-index 1
set -g pane-base-index 1
set -s escape-time 0

# set -g status-justify centre
set -g mouse on


#-- bindkeys --#
# unbind C-b
# set -g prefix C-Space
# bind Space send-prefix

unbind ^b
set -g prefix ^k
bind ^k send-prefix

bind Space copy-mode
# bind C-Space copy-mode

set -g status-keys vi
setw -g mode-keys vi
# setw -g mode-mouse on

# split windows like vim.  - Note: vim's definition of a horizontal/vertical split is reversed from tmux's
unbind '"'
unbind %
unbind s
# bind '"' split-window -c '#{pane_current_path}'
# bind '%' split-window -h -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'
bind v split-window -v -c '#{pane_current_path}'
bind V split-window -v -l 40 -c '#{pane_current_path}'
bind s split-window -h -c '#{pane_current_path}'
bind S split-window -h -l 120 -c '#{pane_current_path}'

# navigate panes with h
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
bind < resize-pane -L 10
bind L resize-pane -L 100
bind > resize-pane -R 10
bind R resize-pane -R 100
bind - resize-pane -D 5
bind D resize-pane -D 36
bind + resize-pane -U 5
bind U resize-pane -U 35

# swap panes
bind ^u swapp -U
bind ^d swapp -D

bind q killp

bind ^e last


# Copy and paste like in vim
# unbind [
# bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -T copy-mode-vi 'v' send -X begin-selection
# NOTE:NEED TO INSTALL xclip
# bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
bind -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"


# hotkey
bind '~' splitw htop
bind ! splitw ncmpcpp
bind m command-prompt "splitw -h 'exec man %%'"

bind r source-file ~/.tmux.conf \; display "Configuration Reloaded!"

# getting tmux to copy a buffer to the clipboard
# set-option -g default-command "reattach-to-user-namespace -l zsh" # or bash...
# bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy" \; display-message "Copied tmux buffer to system clipboard"
# bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
# bind y run-shell "tmux show-buffer | xclip -sel clip -i" \; display-message "Copied tmux buffer to system clipboard"

#-- tmux-powerline --#
source "/home/petrus/.local/lib64/python3.5/site-packages/powerline/bindings/tmux/powerline.conf"

# set-option -g status-fg white
# set-option -g status-bg default
# set-option -g status-attr default
# set-window-option -g window-status-fg "#666666"
# set-window-option -g window-status-bg default
# set-window-option -g window-status-attr default
# set-window-option -g window-status-current-fg red
# set-window-option -g window-status-current-bg default
# set-window-option -g window-status-current-attr default
# set-option -g message-fg white
# set-option -g message-bg black
# set-option -g message-attr bright
# setw -g window-status-format         ' #(echo "#{pane_current_command}") '
# setw -g window-status-current-format ' #(echo "#{pane_current_command}") '

# set-option -g status on
# set-option -g status-interval 2
# set-option -g status-utf8 on
# set-option -g status-justify "centre"
# set-option -g status-left-length 70
# set-option -g status-right-length 90
# set-option -g status-left "#(~/Project/installed/tmux-powerline/powerline.sh left)"
# set-option -g status-right "#(~/Project/installed/tmux-powerline/powerline.sh right)"
#
# set -g status-justify centre

#-- statusbar --#
# # set -g status-left "#[fg=green]s#S:w#I.p#P#[default]"
# # set -g status-left-attr bright
# # set -g status-left-length 20


# # set -g status-utf8 on
# # set -g status-interval 1

# set -g visual-activity on
# setw -g monitor-activity on
#
# setw -g automatic-rename off
#
#
# # default statusbar colors
# set -g status-bg colour235 #base02
# set -g status-fg colour136 #yellow
# set -g status-attr default
#
# # default window title colors
# setw -g window-status-fg colour244
# setw -g window-status-bg default
# #setw -g window-status-attr dim
#
# # active window title colors
# setw -g window-status-current-fg colour166 #orange
# setw -g window-status-current-bg default
# #setw -g window-status-current-attr bright
#
# # pane border
# set -g pane-active-border-fg '#55ff55'
# set -g pane-border-fg '#555555'
#
# # message text
# set -g message-bg colour235 #base02
# set -g message-fg colour166 #orange
#
# # pane number display
# set -g display-panes-active-colour colour33 #blue
# set -g display-panes-colour colour166 #orange
#
# # clock
# setw -g clock-mode-colour colour64 #green

# tmux-resurrect configuration
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-processes 'ssh'


run-shell ~/.tmux/plugins/tmux-resurrect/resurrect.tmux
